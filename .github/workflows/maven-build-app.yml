name: Build app
on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        description: Miljø versjon som skal brukes til bygg.
        default: 'ubuntu-latest'
      t-2c:
        required: false
        type: string
        description: Tråd konfig til maven.
        default: ''
      skip-tests:
        type: boolean
        required: false
        description: 'Skip tests'
        default: false
      java-version:
        required: false
        type: string
        description: Java SDK versjon som skal brukes.
        default: '21'
      sonar-scan:
        required: false
        type: boolean
        description: Skal sonar scan brukes?
        default: false
      build-image:
        required: false
        type: boolean
        description: Skal docker image bygges?
        default: true
      push-image:
        required: false
        type: boolean
        description: Skal docker image pushes?
        default: false
      upload-image:
        required: false
        type: boolean
        description: Skal docker image lastes opp til jobben?
        default: false
      additional-tag:
        required: false
        type: string
        description: Ekstra label å tagge docker image med - nyttig for repoer med dev brancher som pushes til dev
      namespace:
        required: false
        type: string
        description: "NAV team"
        default: "k9saksbehandling"
    outputs:
      build-version:
        description: "Build version"
        value: ${{ jobs.build-and-test.outputs.build-version }}
      image-artifact-name:
        description: 'local docker image artifact name to be downloaded '
        value: ${{ jobs.build-and-test.outputs.image-artifact-name }}
jobs:
  build-and-test:
    name: Build and test
    permissions:
      contents: read
      id-token: write
    runs-on: ${{ (github.actor == 'dependabot[bot]' && 'ubuntu-latest') || inputs.runs-on }}

    env:
      TZ: "Europe/Oslo"

    outputs:
      build-version: ${{ steps.build-and-test.outputs.build-version }}
      image-artifact-name: ${{ steps.docker-build.outputs.image-artifact-name }}

    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # ratchet:actions/checkout@v4
        with:
          fetch-depth: 0 # checkout gir shallow copy - fetch-depth: 0 vil tilgjengeliggjøre tags
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup java and maven
        uses: navikt/sif-gha-workflows/.github/actions/maven/setup-java-and-maven@main # ratchet:exclude
        with:
          github-token: ${{ secrets.READER_TOKEN }} # bruker READER_TOKEN pga private repos
          java-version: ${{ inputs.java-version }}
      - name: Maven install and test
        id: build-and-test
        uses: navikt/sif-gha-workflows/.github/actions/maven/test-and-build@main # ratchet:exclude
        with:
          t-2c: ${{ inputs.t-2c }}
          skip-tests: ${{ inputs.skip-tests }}
      - name: Bygg og push docker image
        id: docker-build
        if: inputs.build-image
        uses: navikt/sif-gha-workflows/.github/actions/maven/build-push-docker-image@main # ratchet:exclude
        with:
          build-version: ${{ steps.build-and-test.outputs.build-version }}
          push-image: ${{ inputs.push-image }}
          upload-image: ${{ inputs.upload-image }}
          additional-tag: ${{ inputs.additional-tag }}
          docker_platforms: ${{ (inputs.upload-image && 'linux/amd64') || null }} # docker image tarball støtter bare én platform av gangen
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          namespace: ${{ inputs.namespace }}
      - name: Clean up generated stuff before caching
        run: |
          rm ~/.m2/repository/no/nav -r
