name: Deploy
on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
        description: 'Image tag to deploy (example 2023.03.10.080433-f821119)'
      cluster:
        required: true
        type: string
        description: 'The cluster to deploy to (dev-fss|dev-gcp|prod-fss|prod-gcp)'
      namespace:
        required: false
        type: string
        description: 'The namespace to deploy to'
        default: 'k9saksbehandling'
      gar:
        required: false
        type: string
        description: 'Deploy using Google Artifact Registry'
        default: 'false'
      naiserator_file:
        required: false
        type: string
        description: 'The naiserator.yaml file name in .deploy/ to use'
        default: 'nais/naiserator.yaml'
      input_vars_file:
        required: false
        type: string
        description: 'The naiserator.yaml file name in .deploy/ to use'
      deploy_context:
        required: false
        type: string
        description: 'The deploy context /'
        default: ''
      image_suffix:
        required: false
        type: string
        description: 'The suffix of the image to be deployed'
        default: ''
      branch:
        required: false
        type: string
        description: 'Alternativ branch Ã¥ deploye fra'

env:
  IMAGE: ${{ inputs.image }} # Brukes i naiserator.yaml
jobs:
  commit_url:
    name: comparison_url
    runs-on: 'ubuntu-latest'
    if: contains(inputs.cluster, 'prod')
    permissions:
      contents: read
      deployments: read
    outputs:
      output1: ${{ steps.compare_commits.LAST_DEPLOY_SHA }}
    steps:
      - name: Construct comparison url for last deploy
        id: compare_commits
        run: |
          LAST_DEPLOY_SHA=$(gh api graphql -f owner='${{ github.repository_owner }}' -f name='${{ github.event.repository.name }}' -f deployment_env='${{ env.DEPLOY_ENV }}' -f query='query($owner: String!, $name: String!, $deployment_env: String!) { repository(owner: $owner, name: $name) { deployments(environments: [$deployment_env], orderBy: {field: CREATED_AT, direction: DESC}, first: 50) {edges { node { commit { oid } state }}}}}' | jq -r ' .data.repository.deployments.edges[] | select(.node.state == "ACTIVE") | .node.commit.oid')
          url="https://github.com/${{ github.repository }}/compare/${LAST_DEPLOY_SHA}...${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "LAST_DEPLOY_SHA=$LAST_DEPLOY_SHA" >> $GITHUB_OUTPUT
          echo "Diff last deploy to ${{ env.DEPLOY_ENV }} : <${url}>" >> $GITHUB_STEP_SUMMARY
        env:
          DEPLOY_ENV: ${{ inputs.cluster }}:${{ inputs.namespace }}${{ inputs.image_suffix }}
          GH_TOKEN: ${{ github.token }}
  deploy:
    name: deploy
    environment: ${{ inputs.cluster }}:${{ inputs.namespace }}${{ inputs.image_suffix }}
    runs-on: 'ubuntu-latest'
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # ratchet:actions/checkout@v4
        with:
          ref: ${{ (inputs.branch != '' && inputs.branch) || '' }}
      - name: Deploy ${{ inputs.cluster }} fra Github
        if: inputs.gar == 'false'
        uses: nais/deploy/actions/deploy@v2
        env:
          PRINT_PAYLOAD: true
          CLUSTER: ${{ inputs.cluster }}
          RESOURCE: ${{ inputs.naiserator_file }}
          VARS: ${{ inputs.input_vars_file }}
      - name: Login GAR
        uses: nais/login@4ce7445c84f09114e481a1d2c164f563e9e2ba8e # ratchet:nais/login@v0
        if: inputs.gar == 'true'
        id: login
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: ${{ inputs.namespace }}
      - name: Deploy ${{ inputs.cluster }} fra GAR
        if: inputs.gar == 'true'
        uses: nais/deploy/actions/deploy@v2
        env:
          PRINT_PAYLOAD: true
          CLUSTER: ${{ inputs.cluster }}
          IMAGE: ${{ steps.login.outputs.registry }}/${{ github.repository }}${{ inputs.image_suffix }}:${{ inputs.image }}
          RESOURCE: ${{ inputs.naiserator_file }}
          VARS: ${{ inputs.input_vars_file }}
