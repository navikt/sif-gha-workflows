name: "Build and push docker image"
description: "Build and push docker image"
inputs:
  build-version:
    description: "Image tag for the docker image"
    required: true
  project_id:
    required: true
    description: "NAIS project id"
  identity_provider:
    required: true
    description: "NAIS identity provider"
  namespace:
    required: false
    description: "NAV team"
    default: "k9saksbehandling"
  push-image:
    required: false
    description: "Push the docker image (true|false)"
    default: "false"
  upload-image:
    required: false
    description: "upload the docker image to job (true|false)"
    default: "false"
  dockerfile:
    description: "Dockerfile"
    required: true
    default: "Dockerfile"
  docker_context:
    description: "Docker context"
    required: false
    default: "."
  docker_platforms:
    description: "Docker platforms"
    required: false
    default: "linux/amd64,linux/arm64"
  image_suffix:
    description: "Adds a suffix to the generated docker image name"
    required: false
    default: ""
outputs:
  upload_image_path:
    description: 'full path of uploaded image'
    value: ${{ steps.upload-image-path.outputs.image_path }}
runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # ratchet:docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # ratchet:docker/setup-buildx-action@v2
    - name: NAIS login
      uses: nais/login@104bca34b70d1d00fe837bcd0689633978eca744 # ratchet:nais/login@v0
      id: login
      with:
        project_id: ${{ inputs.project_id }}
        identity_provider: ${{ inputs.identity_provider }}
        team: ${{ inputs.namespace }}
    - name: Setup environment
      shell: bash
      run: |
        if [ ! -f "${{ inputs.dockerfile }}" ]; then
          echo "::error ::Dockerfile not found: ${{ inputs.dockerfile }}. Do you need to prepend context or working directory?"
          exit 1
        elif [ ! -d "${{ inputs.docker_context }}" ]; then
          echo "::error ::Docker context not found: ${{ inputs.docker_context }}."
          exit 1
        fi
    - name: Docker meta
      uses: docker/metadata-action@9dc751fe249ad99385a2583ee0d084c400eee04e # ratchet:docker/metadata-action@v4
      id: meta
      with:
        images: ${{ steps.login.outputs.registry }}/${{ github.repository }}${{ inputs.image_suffix }}
        tags: |
          type=raw,value=${{ inputs.build-version }}
          # set latest tag for default branch (master)
          type=raw,value=latest,enable={{is_default_branch}}
    - name: Bygg og push docker image
      uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # ratchet:docker/build-push-action@v4
      id: build_push
      with:
        context: ${{ inputs.docker_context }}
        file: ${{ inputs.dockerfile }}
        platforms: ${{ inputs.docker_platforms }}
        pull: true
        push: ${{ inputs.push-image == 'true' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        outputs: ${{inputs.upload-image && format('type=docker,dest=/tmp/local-images/{0}', inputs.build-version) }}
    - name: Generate SBOM, attest and sign image
      if: inputs.push-image == 'true'
      uses: nais/attest-sign@603c79b4f9c710ce3b0ab468d13563915b4da6a2 # ratchet:nais/attest-sign@v1.3.3
      with:
        image_ref: ${{ steps.login.outputs.registry }}/${{ github.repository }}${{ inputs.image_suffix }}@${{ steps.build_push.outputs.digest }}
    - name: Upload image
      if: inputs.upload-image == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.build-version }}-docker-image
        path: /tmp/local-images/${{ inputs.build-version }}.tar
    - name: Set upload image output full path
      id: upload-image-path
      if: inputs.upload-image == 'true'
      shell: bash
      run: |
        echo image_path="/tmp/local-images/${{ inputs.build-version }}.tar" >> $GITHUB_OUTPUTS
